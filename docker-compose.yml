name: atlas-oms-core-audit-trail-service
services:

  oms.core.audit.trail.db:
    container_name: oms.core.audit.trail.db
    image: postgres:latest
    environment:
      - POSTGRES_DB=users
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    ports:
      - 5434:5432
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 2000M
        reservations:
          cpus: '0.1'
          memory: 300M
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 5s
      retries: 10

  oms.core.audit.trail.kafka.init:
    container_name: oms.core.audit.trail.kafka.init
    image: bitnami/kafka:latest
    # /bin/bash -c "...": This tells the container to run the specified string of commands in a bash shell.
    # tr -d '\\r' < /create_topics.sh > /create_topics_unix.sh: This command removes the carriage return characters from the create_topics.sh file and writes the output to create_topics_unix.sh.
    # chmod +x /create_topics_unix.sh: This command makes the create_topics_unix.sh file executable.
    command: ["/bin/bash", "-c", "tr -d '\\r' < /create_topics.sh > /create_topics_unix.sh && chmod +x /create_topics_unix.sh && /create_topics_unix.sh"]
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=oms.zookeeper:2181
    volumes:
      - "kafka_data:/bitnami"
      - type: bind
        source: ./create_topics.sh
        target: /create_topics.sh
    init: true
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 2000M
        reservations:
          cpus: '0.1'
          memory: 1000M
    # run this container as root so we don't have to worry about permissions
    user: root  
    networks:
      - oms-network

volumes:
  kafka_data:
    driver: local
  postgres_data:
    driver: local

networks:
  oms-network:
    external: true
